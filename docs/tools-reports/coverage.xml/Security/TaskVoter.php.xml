<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="TaskVoter.php" path="/Security">
    <totals>
      <lines total="46" comments="4" code="42" executable="10" executed="8" percent="80.00"/>
      <methods count="2" tested="1" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Security\TaskVoter" start="12" executable="10" executed="8" crap="6.29">
      <namespace name="App\Security"/>
      <method name="supports" signature="supports(string $attribute, mixed $subject): bool" start="16" end="19" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="voteOnAttribute" signature="voteOnAttribute(string $attribute, mixed $subject, Symfony\Component\Security\Core\Authentication\Token\TokenInterface $token): bool" start="21" end="44" crap="4.18" executable="9" executed="7" coverage="77.777777777778"/>
    </class>
    <coverage>
      <line nr="18">
        <covered by="App\Tests\Task\CreateTest::testShouldCreateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\CreateTest::testShouldRaiseHttpAccessDeniedAndRedirectToLogin"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldDeleteTaskAndRedirectToListPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\DeleteTest::testAdminCanDeleteOtherUserTask"/>
        <covered by="App\Tests\Task\ListTest::testShouldListTasks"/>
        <covered by="App\Tests\Task\ListTest::testShouldRaiseHttpAccessDeniedAndRedirectToLogin"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldToogleTask"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\ToggleTest::testAdminCanToggleOtherUserTask"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldUpdateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldRaiseFormErrors#blank title"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldRaiseFormErrors#blank content"/>
      </line>
      <line nr="23">
        <covered by="App\Tests\Task\CreateTest::testShouldCreateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldDeleteTaskAndRedirectToListPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\DeleteTest::testAdminCanDeleteOtherUserTask"/>
        <covered by="App\Tests\Task\ListTest::testShouldListTasks"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldToogleTask"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\ToggleTest::testAdminCanToggleOtherUserTask"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldUpdateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldRaiseFormErrors#blank title"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldRaiseFormErrors#blank content"/>
      </line>
      <line nr="25">
        <covered by="App\Tests\Task\CreateTest::testShouldCreateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldDeleteTaskAndRedirectToListPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\DeleteTest::testAdminCanDeleteOtherUserTask"/>
        <covered by="App\Tests\Task\ListTest::testShouldListTasks"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldToogleTask"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\ToggleTest::testAdminCanToggleOtherUserTask"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldUpdateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldRaiseFormErrors#blank title"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldRaiseFormErrors#blank content"/>
      </line>
      <line nr="30">
        <covered by="App\Tests\Task\CreateTest::testShouldCreateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldDeleteTaskAndRedirectToListPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\DeleteTest::testAdminCanDeleteOtherUserTask"/>
        <covered by="App\Tests\Task\ListTest::testShouldListTasks"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldToogleTask"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\ToggleTest::testAdminCanToggleOtherUserTask"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldUpdateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldRaiseFormErrors#blank title"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldRaiseFormErrors#blank content"/>
      </line>
      <line nr="31">
        <covered by="App\Tests\Task\DeleteTest::testAdminCanDeleteOtherUserTask"/>
        <covered by="App\Tests\Task\ToggleTest::testAdminCanToggleOtherUserTask"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldUpdateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldRaiseFormErrors#blank title"/>
        <covered by="App\Tests\Task\UpdateTest::testShouldRaiseFormErrors#blank content"/>
      </line>
      <line nr="35">
        <covered by="App\Tests\Task\CreateTest::testShouldCreateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldDeleteTaskAndRedirectToListPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\ListTest::testShouldListTasks"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldToogleTask"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldRaiseHttpAccessDenied"/>
      </line>
      <line nr="38">
        <covered by="App\Tests\Task\CreateTest::testShouldCreateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldDeleteTaskAndRedirectToListPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\ListTest::testShouldListTasks"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldToogleTask"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldRaiseHttpAccessDenied"/>
      </line>
      <line nr="43">
        <covered by="App\Tests\Task\CreateTest::testShouldCreateTaskAndRedirectToShowPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldDeleteTaskAndRedirectToListPage"/>
        <covered by="App\Tests\Task\DeleteTest::testShouldRaiseHttpAccessDenied"/>
        <covered by="App\Tests\Task\ListTest::testShouldListTasks"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldToogleTask"/>
        <covered by="App\Tests\Task\ToggleTest::testShouldRaiseHttpAccessDenied"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Security</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Entity\Task</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Entity\User</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Security\Core\Authentication\Token\TokenInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Security\Core\Authorization\Voter\Voter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TaskVoter</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Voter</token>
      </line>
      <line no="13">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OWNER</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'owner'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">supports</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subject</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">OWNER</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subject</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Task</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">voteOnAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subject</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TokenInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// If the user is an admin, they can do anything</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ROLE_ADMIN'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="33"/>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** @var Task $task */</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subject</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// If the task does not belong to a user, deny access</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="41"/>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// If the user owns the task, grant access</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$task</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="45">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="46"/>
    </source>
  </file>
</phpunit>
